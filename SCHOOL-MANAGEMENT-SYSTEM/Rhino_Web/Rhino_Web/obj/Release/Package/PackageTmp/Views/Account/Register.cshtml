@model Rhino_Web.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
}

<h1>Registration Form</h1>


@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()



    <div class="form-horizontal">
      

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">

            <div class="col-md-2">
                @Html.Label("Parmanent Address", htmlAttributes: new { @class = "control-label" })
            </div>

            <div class="col-md-2">
                @Html.LabelFor(model => model.Parmanent_Thana, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Parmanent_Thana, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Parmanent_Thana, "", new { @class = "text-danger" })
            </div>




            <div class="col-md-2">
                @Html.LabelFor(model => model.Parmanent_House_No, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Parmanent_House_No, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Parmanent_House_No, "", new { @class = "text-danger" })
            </div>



            <div class="col-md-2">
                @Html.LabelFor(model => model.Parmanent_District, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Parmanent_District, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Parmanent_District, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-4">

            </div>



        </div>



        <div class="form-group">


            <div class="col-md-2">

         @Html.Label("Present Address", htmlAttributes: new { @class = "control-label" })

            </div>

            <div class="col-md-2">

                @Html.LabelFor(model => model.Present_Thana, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Present_Thana, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Present_Thana, "", new { @class = "text-danger" })




            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.Present_House_No, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Present_House_No, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Present_House_No, "")


            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.Present_District, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Present_District, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Present_District, "")

            </div>

            <div class="col-md-4"></div>


        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>







        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.Gender, new List<SelectListItem> {

              new SelectListItem{ Text="Male",Value="Male"},
              new SelectListItem{ Text="Female",Value="Female"}

          }, "Select Gender", new { htmlAttributes = new { @class = "dropdown - header" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.School_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.School_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.School_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>








        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
           
            </div>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

